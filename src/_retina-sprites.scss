/*
 * Retina Sprites for Compass
 * by:              Gaya Kessler
 * last update:     03/11/14
 *
 * Usage:
 * 1. create two folders in your image directory (in this case 'icons' and 'icons-2x').
 * 2. adjust the foldernames defined below if you use different names.
 * 3. create sprite images for pixel ratio 1 screens and put them in the first folder.
 * 4. create sprite images for pixel ratio 2 screens and put them in the second folder, use the same filenames.
 * 5. use the sprite-image in your Sass/Scss using: '@include use-sprite(<sprite-name>)'
 */

//first we'll define the folders where the sprites are and their layouts
$sprite-icons-folder: "icons/*.png" !default;
$sprite-icons-2x-folder: "icons-2x/*.png" !default;
$icons: sprite-map($sprite-icons-folder, $layout: smart);
$icons-2x: sprite-map($sprite-icons-2x-folder, $layout: smart);

@mixin __use-sprite($map, $sprite, $scale: 1, $dpi: 1) {
    $map_url: sprite-url($map);
    $map_path: sprite_path($map);
    $map_width: (image-width($map_path) * $scale);
    $map_height: (image-height($map_path) * $scale);
    $sprite_x: (nth(sprite-position($map, $sprite), 1) * $scale);
    $sprite_y: (nth(sprite-position($map, $sprite), 2) * $scale);
    $sprite_file: sprite-file($map, $sprite);
    $sprite_width: (image-width($sprite_file)*$scale);
    $sprite_height: (image-height($sprite_file)*$scale);

    background-image: $map_url;
    background-position: floor($sprite_x/$dpi) floor($sprite_y/$dpi);
    background-size: floor($map_width/$dpi) floor($map_height/$dpi);
    width: floor($sprite_width/$dpi);
    height: floor($sprite_height/$dpi);

    background-repeat: no-repeat;
    overflow: hidden;
    display: block;
}

//Sprite mixin, works perfectly with standard defines
@mixin use-sprite($sprite, $size: 1) {
    @include __use-sprite($icons, $sprite, $size);

    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 2dppx) {
        @include __use-sprite($icons-2x, $sprite, $size, $dpi: 2);
    }
}
